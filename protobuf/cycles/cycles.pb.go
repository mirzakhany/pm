// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.8.0
// source: protobuf/cycles/cycles.proto

package cycles

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListCyclesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListCyclesRequest) Reset() {
	*x = ListCyclesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_cycles_cycles_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCyclesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCyclesRequest) ProtoMessage() {}

func (x *ListCyclesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_cycles_cycles_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCyclesRequest.ProtoReflect.Descriptor instead.
func (*ListCyclesRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_cycles_cycles_proto_rawDescGZIP(), []int{0}
}

func (x *ListCyclesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListCyclesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListCyclesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cycles     []*Cycle `protobuf:"bytes,1,rep,name=cycles,proto3" json:"cycles,omitempty"`
	TotalCount int64    `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Limit      int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     int64    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListCyclesResponse) Reset() {
	*x = ListCyclesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_cycles_cycles_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCyclesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCyclesResponse) ProtoMessage() {}

func (x *ListCyclesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_cycles_cycles_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCyclesResponse.ProtoReflect.Descriptor instead.
func (*ListCyclesResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_cycles_cycles_proto_rawDescGZIP(), []int{1}
}

func (x *ListCyclesResponse) GetCycles() []*Cycle {
	if x != nil {
		return x.Cycles
	}
	return nil
}

func (x *ListCyclesResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListCyclesResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListCyclesResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetCycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetCycleRequest) Reset() {
	*x = GetCycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_cycles_cycles_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCycleRequest) ProtoMessage() {}

func (x *GetCycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_cycles_cycles_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCycleRequest.ProtoReflect.Descriptor instead.
func (*GetCycleRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_cycles_cycles_proto_rawDescGZIP(), []int{2}
}

func (x *GetCycleRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CreateCycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Active      bool                 `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	Description string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartAt     *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt       *timestamp.Timestamp `protobuf:"bytes,5,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
}

func (x *CreateCycleRequest) Reset() {
	*x = CreateCycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_cycles_cycles_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCycleRequest) ProtoMessage() {}

func (x *CreateCycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_cycles_cycles_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCycleRequest.ProtoReflect.Descriptor instead.
func (*CreateCycleRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_cycles_cycles_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCycleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateCycleRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *CreateCycleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateCycleRequest) GetStartAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *CreateCycleRequest) GetEndAt() *timestamp.Timestamp {
	if x != nil {
		return x.EndAt
	}
	return nil
}

type UpdateCycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Title       string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Active      bool                 `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Description string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	StartAt     *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt       *timestamp.Timestamp `protobuf:"bytes,6,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
}

func (x *UpdateCycleRequest) Reset() {
	*x = UpdateCycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_cycles_cycles_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCycleRequest) ProtoMessage() {}

func (x *UpdateCycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_cycles_cycles_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCycleRequest.ProtoReflect.Descriptor instead.
func (*UpdateCycleRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_cycles_cycles_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCycleRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateCycleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateCycleRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UpdateCycleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateCycleRequest) GetStartAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *UpdateCycleRequest) GetEndAt() *timestamp.Timestamp {
	if x != nil {
		return x.EndAt
	}
	return nil
}

type DeleteCycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DeleteCycleRequest) Reset() {
	*x = DeleteCycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_cycles_cycles_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCycleRequest) ProtoMessage() {}

func (x *DeleteCycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_cycles_cycles_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCycleRequest.ProtoReflect.Descriptor instead.
func (*DeleteCycleRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_cycles_cycles_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCycleRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_protobuf_cycles_cycles_proto protoreflect.FileDescriptor

var file_protobuf_cycles_cycles_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x73, 0x2f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x56, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x41, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x73, 0x56, 0x31, 0x2e, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x06, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x22, 0xe2, 0x01, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x31, 0x0a,
	0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74,
	0x22, 0x28, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x32, 0xcf, 0x03, 0x0a, 0x0c, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x73, 0x56, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x56,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x56, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x56, 0x31, 0x2e, 0x43, 0x79, 0x63, 0x6c, 0x65,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x53, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x73, 0x56, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x79, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x73, 0x56, 0x31, 0x2e, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0f, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x5a, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12,
	0x1c, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x56, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x56, 0x31, 0x2e, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x5e, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x73, 0x56, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x42, 0x18, 0x5a, 0x16,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x3b,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_cycles_cycles_proto_rawDescOnce sync.Once
	file_protobuf_cycles_cycles_proto_rawDescData = file_protobuf_cycles_cycles_proto_rawDesc
)

func file_protobuf_cycles_cycles_proto_rawDescGZIP() []byte {
	file_protobuf_cycles_cycles_proto_rawDescOnce.Do(func() {
		file_protobuf_cycles_cycles_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_cycles_cycles_proto_rawDescData)
	})
	return file_protobuf_cycles_cycles_proto_rawDescData
}

var file_protobuf_cycles_cycles_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protobuf_cycles_cycles_proto_goTypes = []interface{}{
	(*ListCyclesRequest)(nil),   // 0: cyclesV1.ListCyclesRequest
	(*ListCyclesResponse)(nil),  // 1: cyclesV1.ListCyclesResponse
	(*GetCycleRequest)(nil),     // 2: cyclesV1.GetCycleRequest
	(*CreateCycleRequest)(nil),  // 3: cyclesV1.CreateCycleRequest
	(*UpdateCycleRequest)(nil),  // 4: cyclesV1.UpdateCycleRequest
	(*DeleteCycleRequest)(nil),  // 5: cyclesV1.DeleteCycleRequest
	(*Cycle)(nil),               // 6: cyclesV1.Cycle
	(*timestamp.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*empty.Empty)(nil),         // 8: google.protobuf.Empty
}
var file_protobuf_cycles_cycles_proto_depIdxs = []int32{
	6,  // 0: cyclesV1.ListCyclesResponse.cycles:type_name -> cyclesV1.Cycle
	7,  // 1: cyclesV1.CreateCycleRequest.start_at:type_name -> google.protobuf.Timestamp
	7,  // 2: cyclesV1.CreateCycleRequest.end_at:type_name -> google.protobuf.Timestamp
	7,  // 3: cyclesV1.UpdateCycleRequest.start_at:type_name -> google.protobuf.Timestamp
	7,  // 4: cyclesV1.UpdateCycleRequest.end_at:type_name -> google.protobuf.Timestamp
	0,  // 5: cyclesV1.CycleService.ListCycles:input_type -> cyclesV1.ListCyclesRequest
	2,  // 6: cyclesV1.CycleService.GetCycle:input_type -> cyclesV1.GetCycleRequest
	3,  // 7: cyclesV1.CycleService.CreateCycle:input_type -> cyclesV1.CreateCycleRequest
	4,  // 8: cyclesV1.CycleService.UpdateCycle:input_type -> cyclesV1.UpdateCycleRequest
	5,  // 9: cyclesV1.CycleService.DeleteCycle:input_type -> cyclesV1.DeleteCycleRequest
	1,  // 10: cyclesV1.CycleService.ListCycles:output_type -> cyclesV1.ListCyclesResponse
	6,  // 11: cyclesV1.CycleService.GetCycle:output_type -> cyclesV1.Cycle
	6,  // 12: cyclesV1.CycleService.CreateCycle:output_type -> cyclesV1.Cycle
	6,  // 13: cyclesV1.CycleService.UpdateCycle:output_type -> cyclesV1.Cycle
	8,  // 14: cyclesV1.CycleService.DeleteCycle:output_type -> google.protobuf.Empty
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_protobuf_cycles_cycles_proto_init() }
func file_protobuf_cycles_cycles_proto_init() {
	if File_protobuf_cycles_cycles_proto != nil {
		return
	}
	file_protobuf_cycles_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protobuf_cycles_cycles_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCyclesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_cycles_cycles_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCyclesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_cycles_cycles_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_cycles_cycles_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_cycles_cycles_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_cycles_cycles_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_cycles_cycles_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_cycles_cycles_proto_goTypes,
		DependencyIndexes: file_protobuf_cycles_cycles_proto_depIdxs,
		MessageInfos:      file_protobuf_cycles_cycles_proto_msgTypes,
	}.Build()
	File_protobuf_cycles_cycles_proto = out.File
	file_protobuf_cycles_cycles_proto_rawDesc = nil
	file_protobuf_cycles_cycles_proto_goTypes = nil
	file_protobuf_cycles_cycles_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CycleServiceClient is the client API for CycleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CycleServiceClient interface {
	// List Cycles
	ListCycles(ctx context.Context, in *ListCyclesRequest, opts ...grpc.CallOption) (*ListCyclesResponse, error)
	// Get Cycle
	GetCycle(ctx context.Context, in *GetCycleRequest, opts ...grpc.CallOption) (*Cycle, error)
	// Create Cycle object request
	CreateCycle(ctx context.Context, in *CreateCycleRequest, opts ...grpc.CallOption) (*Cycle, error)
	// Update Cycle object request
	UpdateCycle(ctx context.Context, in *UpdateCycleRequest, opts ...grpc.CallOption) (*Cycle, error)
	// Delete Cycle object request
	DeleteCycle(ctx context.Context, in *DeleteCycleRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type cycleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCycleServiceClient(cc grpc.ClientConnInterface) CycleServiceClient {
	return &cycleServiceClient{cc}
}

func (c *cycleServiceClient) ListCycles(ctx context.Context, in *ListCyclesRequest, opts ...grpc.CallOption) (*ListCyclesResponse, error) {
	out := new(ListCyclesResponse)
	err := c.cc.Invoke(ctx, "/cyclesV1.CycleService/ListCycles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cycleServiceClient) GetCycle(ctx context.Context, in *GetCycleRequest, opts ...grpc.CallOption) (*Cycle, error) {
	out := new(Cycle)
	err := c.cc.Invoke(ctx, "/cyclesV1.CycleService/GetCycle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cycleServiceClient) CreateCycle(ctx context.Context, in *CreateCycleRequest, opts ...grpc.CallOption) (*Cycle, error) {
	out := new(Cycle)
	err := c.cc.Invoke(ctx, "/cyclesV1.CycleService/CreateCycle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cycleServiceClient) UpdateCycle(ctx context.Context, in *UpdateCycleRequest, opts ...grpc.CallOption) (*Cycle, error) {
	out := new(Cycle)
	err := c.cc.Invoke(ctx, "/cyclesV1.CycleService/UpdateCycle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cycleServiceClient) DeleteCycle(ctx context.Context, in *DeleteCycleRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/cyclesV1.CycleService/DeleteCycle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CycleServiceServer is the server API for CycleService service.
type CycleServiceServer interface {
	// List Cycles
	ListCycles(context.Context, *ListCyclesRequest) (*ListCyclesResponse, error)
	// Get Cycle
	GetCycle(context.Context, *GetCycleRequest) (*Cycle, error)
	// Create Cycle object request
	CreateCycle(context.Context, *CreateCycleRequest) (*Cycle, error)
	// Update Cycle object request
	UpdateCycle(context.Context, *UpdateCycleRequest) (*Cycle, error)
	// Delete Cycle object request
	DeleteCycle(context.Context, *DeleteCycleRequest) (*empty.Empty, error)
}

// UnimplementedCycleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCycleServiceServer struct {
}

func (*UnimplementedCycleServiceServer) ListCycles(context.Context, *ListCyclesRequest) (*ListCyclesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCycles not implemented")
}
func (*UnimplementedCycleServiceServer) GetCycle(context.Context, *GetCycleRequest) (*Cycle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCycle not implemented")
}
func (*UnimplementedCycleServiceServer) CreateCycle(context.Context, *CreateCycleRequest) (*Cycle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCycle not implemented")
}
func (*UnimplementedCycleServiceServer) UpdateCycle(context.Context, *UpdateCycleRequest) (*Cycle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCycle not implemented")
}
func (*UnimplementedCycleServiceServer) DeleteCycle(context.Context, *DeleteCycleRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCycle not implemented")
}

func RegisterCycleServiceServer(s *grpc.Server, srv CycleServiceServer) {
	s.RegisterService(&_CycleService_serviceDesc, srv)
}

func _CycleService_ListCycles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCyclesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CycleServiceServer).ListCycles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cyclesV1.CycleService/ListCycles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CycleServiceServer).ListCycles(ctx, req.(*ListCyclesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CycleService_GetCycle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCycleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CycleServiceServer).GetCycle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cyclesV1.CycleService/GetCycle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CycleServiceServer).GetCycle(ctx, req.(*GetCycleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CycleService_CreateCycle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCycleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CycleServiceServer).CreateCycle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cyclesV1.CycleService/CreateCycle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CycleServiceServer).CreateCycle(ctx, req.(*CreateCycleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CycleService_UpdateCycle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCycleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CycleServiceServer).UpdateCycle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cyclesV1.CycleService/UpdateCycle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CycleServiceServer).UpdateCycle(ctx, req.(*UpdateCycleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CycleService_DeleteCycle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCycleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CycleServiceServer).DeleteCycle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cyclesV1.CycleService/DeleteCycle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CycleServiceServer).DeleteCycle(ctx, req.(*DeleteCycleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CycleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cyclesV1.CycleService",
	HandlerType: (*CycleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListCycles",
			Handler:    _CycleService_ListCycles_Handler,
		},
		{
			MethodName: "GetCycle",
			Handler:    _CycleService_GetCycle_Handler,
		},
		{
			MethodName: "CreateCycle",
			Handler:    _CycleService_CreateCycle_Handler,
		},
		{
			MethodName: "UpdateCycle",
			Handler:    _CycleService_UpdateCycle_Handler,
		},
		{
			MethodName: "DeleteCycle",
			Handler:    _CycleService_DeleteCycle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/cycles/cycles.proto",
}
