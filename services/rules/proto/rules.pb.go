// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/rules/proto/rules.proto

package rules

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ListRulesRequest struct {
	PageSize             int32    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRulesRequest) Reset()         { *m = ListRulesRequest{} }
func (m *ListRulesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRulesRequest) ProtoMessage()    {}
func (*ListRulesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc2eceab203cdfba, []int{0}
}
func (m *ListRulesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRulesRequest.Unmarshal(m, b)
}
func (m *ListRulesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRulesRequest.Marshal(b, m, deterministic)
}
func (m *ListRulesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRulesRequest.Merge(m, src)
}
func (m *ListRulesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRulesRequest.Size(m)
}
func (m *ListRulesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRulesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRulesRequest proto.InternalMessageInfo

func (m *ListRulesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRulesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListRulesResponse struct {
	Rules                []*Rule  `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	TotalSize            int32    `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	NextPageToken        string   `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRulesResponse) Reset()         { *m = ListRulesResponse{} }
func (m *ListRulesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRulesResponse) ProtoMessage()    {}
func (*ListRulesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc2eceab203cdfba, []int{1}
}
func (m *ListRulesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRulesResponse.Unmarshal(m, b)
}
func (m *ListRulesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRulesResponse.Marshal(b, m, deterministic)
}
func (m *ListRulesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRulesResponse.Merge(m, src)
}
func (m *ListRulesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRulesResponse.Size(m)
}
func (m *ListRulesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRulesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRulesResponse proto.InternalMessageInfo

func (m *ListRulesResponse) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *ListRulesResponse) GetTotalSize() int32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *ListRulesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetRuleRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRuleRequest) Reset()         { *m = GetRuleRequest{} }
func (m *GetRuleRequest) String() string { return proto.CompactTextString(m) }
func (*GetRuleRequest) ProtoMessage()    {}
func (*GetRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc2eceab203cdfba, []int{2}
}
func (m *GetRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRuleRequest.Unmarshal(m, b)
}
func (m *GetRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRuleRequest.Marshal(b, m, deterministic)
}
func (m *GetRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRuleRequest.Merge(m, src)
}
func (m *GetRuleRequest) XXX_Size() int {
	return xxx_messageInfo_GetRuleRequest.Size(m)
}
func (m *GetRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRuleRequest proto.InternalMessageInfo

func (m *GetRuleRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type CreateRuleRequest struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRuleRequest) Reset()         { *m = CreateRuleRequest{} }
func (m *CreateRuleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRuleRequest) ProtoMessage()    {}
func (*CreateRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc2eceab203cdfba, []int{3}
}
func (m *CreateRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRuleRequest.Unmarshal(m, b)
}
func (m *CreateRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRuleRequest.Marshal(b, m, deterministic)
}
func (m *CreateRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRuleRequest.Merge(m, src)
}
func (m *CreateRuleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRuleRequest.Size(m)
}
func (m *CreateRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRuleRequest proto.InternalMessageInfo

func (m *CreateRuleRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type UpdateRuleRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRuleRequest) Reset()         { *m = UpdateRuleRequest{} }
func (m *UpdateRuleRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRuleRequest) ProtoMessage()    {}
func (*UpdateRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc2eceab203cdfba, []int{4}
}
func (m *UpdateRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRuleRequest.Unmarshal(m, b)
}
func (m *UpdateRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRuleRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRuleRequest.Merge(m, src)
}
func (m *UpdateRuleRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRuleRequest.Size(m)
}
func (m *UpdateRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRuleRequest proto.InternalMessageInfo

func (m *UpdateRuleRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UpdateRuleRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type DeleteRuleRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRuleRequest) Reset()         { *m = DeleteRuleRequest{} }
func (m *DeleteRuleRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRuleRequest) ProtoMessage()    {}
func (*DeleteRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc2eceab203cdfba, []int{5}
}
func (m *DeleteRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRuleRequest.Unmarshal(m, b)
}
func (m *DeleteRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRuleRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRuleRequest.Merge(m, src)
}
func (m *DeleteRuleRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRuleRequest.Size(m)
}
func (m *DeleteRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRuleRequest proto.InternalMessageInfo

func (m *DeleteRuleRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type Rule struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc2eceab203cdfba, []int{6}
}
func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Rule) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*ListRulesRequest)(nil), "rules.ListRulesRequest")
	proto.RegisterType((*ListRulesResponse)(nil), "rules.ListRulesResponse")
	proto.RegisterType((*GetRuleRequest)(nil), "rules.GetRuleRequest")
	proto.RegisterType((*CreateRuleRequest)(nil), "rules.CreateRuleRequest")
	proto.RegisterType((*UpdateRuleRequest)(nil), "rules.UpdateRuleRequest")
	proto.RegisterType((*DeleteRuleRequest)(nil), "rules.DeleteRuleRequest")
	proto.RegisterType((*Rule)(nil), "rules.Rule")
}

func init() { proto.RegisterFile("services/rules/proto/rules.proto", fileDescriptor_bc2eceab203cdfba) }

var fileDescriptor_bc2eceab203cdfba = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x86, 0x95, 0xdd, 0x6e, 0xdb, 0xcc, 0xaa, 0xdb, 0xae, 0xd5, 0x85, 0x28, 0x0b, 0xd2, 0x62,
	0x21, 0x58, 0x7a, 0x48, 0xa0, 0xdc, 0x90, 0xb8, 0x40, 0x11, 0x42, 0x42, 0x55, 0x95, 0x82, 0x84,
	0xb8, 0x54, 0x29, 0x1d, 0x56, 0x16, 0x21, 0x0e, 0xb1, 0x53, 0x41, 0x51, 0x2f, 0xbc, 0x02, 0x37,
	0x5e, 0x8b, 0x57, 0xe0, 0x41, 0x90, 0xc7, 0xde, 0x24, 0xdb, 0x20, 0xd1, 0x9b, 0xed, 0x99, 0xf9,
	0x7e, 0x7b, 0xfe, 0x31, 0xcc, 0x14, 0x96, 0xe7, 0xe2, 0x03, 0xaa, 0xb8, 0xac, 0x32, 0x54, 0x71,
	0x51, 0x4a, 0x2d, 0xed, 0x3a, 0xa2, 0x35, 0x1b, 0xd0, 0x26, 0xbc, 0xb5, 0x90, 0x72, 0x91, 0x61,
	0x9c, 0x16, 0x22, 0x4e, 0xf3, 0x5c, 0xea, 0x54, 0x0b, 0x99, 0xbb, 0xa4, 0x70, 0xea, 0xa2, 0xb4,
	0x3b, 0xad, 0x3e, 0xc6, 0xf8, 0xb9, 0xd0, 0xdf, 0x6c, 0x90, 0x1f, 0xc2, 0xce, 0x6b, 0xa1, 0x74,
	0x62, 0x38, 0x09, 0x7e, 0xa9, 0x50, 0x69, 0x36, 0x05, 0xbf, 0x48, 0x17, 0x78, 0xa2, 0xc4, 0x05,
	0x06, 0xde, 0xcc, 0x9b, 0x0f, 0x92, 0x4d, 0x73, 0x70, 0x2c, 0x2e, 0x90, 0xdd, 0x06, 0xa0, 0xa0,
	0x96, 0x9f, 0x30, 0x0f, 0x7a, 0x33, 0x6f, 0xee, 0x27, 0x94, 0xfe, 0xc6, 0x1c, 0xf0, 0x4b, 0x18,
	0xb7, 0x78, 0xaa, 0x90, 0xb9, 0x42, 0x76, 0x07, 0xec, 0x45, 0x03, 0x6f, 0xd6, 0x9f, 0x0f, 0xf7,
	0x87, 0x91, 0x7d, 0x83, 0x49, 0x4a, 0x6c, 0xc4, 0x60, 0xb5, 0xd4, 0x69, 0x66, 0x45, 0x7b, 0x24,
	0xea, 0xd3, 0x09, 0xa9, 0xde, 0x83, 0xed, 0x1c, 0xbf, 0xea, 0x93, 0x96, 0x74, 0x9f, 0xa4, 0xb7,
	0xcc, 0xf1, 0x51, 0x2d, 0x7f, 0x17, 0x46, 0x2f, 0x91, 0xd4, 0x97, 0x8f, 0x61, 0xb0, 0x56, 0x55,
	0xe2, 0x8c, 0xde, 0xe1, 0x27, 0xb4, 0xe6, 0x0f, 0x60, 0xfc, 0xbc, 0xc4, 0x54, 0x63, 0x3b, 0x71,
	0x17, 0x06, 0x5a, 0xe8, 0x0c, 0x5d, 0xa6, 0xdd, 0xf0, 0xa7, 0x30, 0x7e, 0x5b, 0x9c, 0x5d, 0x49,
	0xfd, 0x07, 0xb3, 0x29, 0xef, 0xb5, 0xcb, 0xef, 0xc3, 0xf8, 0x00, 0x33, 0xfc, 0x6f, 0x39, 0x7f,
	0x08, 0x6b, 0x26, 0xe5, 0xfa, 0xe8, 0xfd, 0x5f, 0x7d, 0x18, 0x9a, 0x92, 0x63, 0x3b, 0x24, 0xec,
	0x10, 0xfc, 0xba, 0xf3, 0xec, 0xa6, 0x6b, 0xf1, 0x55, 0x6f, 0xc3, 0xa0, 0x1b, 0xb0, 0x26, 0xf1,
	0xd1, 0x8f, 0xdf, 0x7f, 0x7e, 0xf6, 0x36, 0xd9, 0xba, 0x9d, 0x30, 0x76, 0x00, 0x1b, 0xae, 0x95,
	0x6c, 0xe2, 0x8a, 0x56, 0x5b, 0x1b, 0xb6, 0x7d, 0xe4, 0x13, 0x2a, 0xdf, 0x66, 0x5b, 0x6e, 0x58,
	0xbf, 0x9b, 0xab, 0x5f, 0xb2, 0x57, 0x00, 0x4d, 0xab, 0xd9, 0x52, 0xbd, 0xd3, 0xfd, 0x55, 0xd6,
	0x2e, 0xb1, 0x46, 0xdc, 0x8f, 0xcf, 0x1f, 0x59, 0xdc, 0x13, 0x6f, 0x8f, 0x1d, 0x01, 0x34, 0x56,
	0xd4, 0xa8, 0x8e, 0x3b, 0xab, 0xa8, 0x29, 0xa1, 0x26, 0xe1, 0x4e, 0x8d, 0x72, 0x37, 0x33, 0xc4,
	0x77, 0x00, 0x8d, 0x3b, 0x35, 0xb1, 0x63, 0x58, 0x78, 0x23, 0xb2, 0x5f, 0x28, 0x5a, 0x7e, 0xa1,
	0xe8, 0x85, 0xf9, 0x42, 0x3c, 0x20, 0x38, 0xdb, 0xeb, 0xc0, 0x9f, 0x6d, 0xbc, 0xb7, 0x73, 0x7d,
	0xba, 0x4e, 0x25, 0x8f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd9, 0xae, 0xe9, 0xb4, 0xcc, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RuleServiceClient is the client API for RuleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuleServiceClient interface {
	// List Rules
	ListRules(ctx context.Context, in *ListRulesRequest, opts ...grpc.CallOption) (*ListRulesResponse, error)
	// Get Rule
	GetRule(ctx context.Context, in *GetRuleRequest, opts ...grpc.CallOption) (*Rule, error)
	// Create Rule object request
	CreateRule(ctx context.Context, in *CreateRuleRequest, opts ...grpc.CallOption) (*Rule, error)
	// Update Rule object request
	UpdateRule(ctx context.Context, in *UpdateRuleRequest, opts ...grpc.CallOption) (*Rule, error)
	// Delete Rule object request
	DeleteRule(ctx context.Context, in *DeleteRuleRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type ruleServiceClient struct {
	cc *grpc.ClientConn
}

func NewRuleServiceClient(cc *grpc.ClientConn) RuleServiceClient {
	return &ruleServiceClient{cc}
}

func (c *ruleServiceClient) ListRules(ctx context.Context, in *ListRulesRequest, opts ...grpc.CallOption) (*ListRulesResponse, error) {
	out := new(ListRulesResponse)
	err := c.cc.Invoke(ctx, "/rules.RuleService/ListRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleServiceClient) GetRule(ctx context.Context, in *GetRuleRequest, opts ...grpc.CallOption) (*Rule, error) {
	out := new(Rule)
	err := c.cc.Invoke(ctx, "/rules.RuleService/GetRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleServiceClient) CreateRule(ctx context.Context, in *CreateRuleRequest, opts ...grpc.CallOption) (*Rule, error) {
	out := new(Rule)
	err := c.cc.Invoke(ctx, "/rules.RuleService/CreateRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleServiceClient) UpdateRule(ctx context.Context, in *UpdateRuleRequest, opts ...grpc.CallOption) (*Rule, error) {
	out := new(Rule)
	err := c.cc.Invoke(ctx, "/rules.RuleService/UpdateRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleServiceClient) DeleteRule(ctx context.Context, in *DeleteRuleRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/rules.RuleService/DeleteRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuleServiceServer is the server API for RuleService service.
type RuleServiceServer interface {
	// List Rules
	ListRules(context.Context, *ListRulesRequest) (*ListRulesResponse, error)
	// Get Rule
	GetRule(context.Context, *GetRuleRequest) (*Rule, error)
	// Create Rule object request
	CreateRule(context.Context, *CreateRuleRequest) (*Rule, error)
	// Update Rule object request
	UpdateRule(context.Context, *UpdateRuleRequest) (*Rule, error)
	// Delete Rule object request
	DeleteRule(context.Context, *DeleteRuleRequest) (*types.Empty, error)
}

// UnimplementedRuleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRuleServiceServer struct {
}

func (*UnimplementedRuleServiceServer) ListRules(ctx context.Context, req *ListRulesRequest) (*ListRulesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRules not implemented")
}
func (*UnimplementedRuleServiceServer) GetRule(ctx context.Context, req *GetRuleRequest) (*Rule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRule not implemented")
}
func (*UnimplementedRuleServiceServer) CreateRule(ctx context.Context, req *CreateRuleRequest) (*Rule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRule not implemented")
}
func (*UnimplementedRuleServiceServer) UpdateRule(ctx context.Context, req *UpdateRuleRequest) (*Rule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRule not implemented")
}
func (*UnimplementedRuleServiceServer) DeleteRule(ctx context.Context, req *DeleteRuleRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRule not implemented")
}

func RegisterRuleServiceServer(s *grpc.Server, srv RuleServiceServer) {
	s.RegisterService(&_RuleService_serviceDesc, srv)
}

func _RuleService_ListRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRulesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleServiceServer).ListRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rules.RuleService/ListRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleServiceServer).ListRules(ctx, req.(*ListRulesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuleService_GetRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleServiceServer).GetRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rules.RuleService/GetRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleServiceServer).GetRule(ctx, req.(*GetRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuleService_CreateRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleServiceServer).CreateRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rules.RuleService/CreateRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleServiceServer).CreateRule(ctx, req.(*CreateRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuleService_UpdateRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleServiceServer).UpdateRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rules.RuleService/UpdateRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleServiceServer).UpdateRule(ctx, req.(*UpdateRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuleService_DeleteRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleServiceServer).DeleteRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rules.RuleService/DeleteRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleServiceServer).DeleteRule(ctx, req.(*DeleteRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RuleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rules.RuleService",
	HandlerType: (*RuleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRules",
			Handler:    _RuleService_ListRules_Handler,
		},
		{
			MethodName: "GetRule",
			Handler:    _RuleService_GetRule_Handler,
		},
		{
			MethodName: "CreateRule",
			Handler:    _RuleService_CreateRule_Handler,
		},
		{
			MethodName: "UpdateRule",
			Handler:    _RuleService_UpdateRule_Handler,
		},
		{
			MethodName: "DeleteRule",
			Handler:    _RuleService_DeleteRule_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/rules/proto/rules.proto",
}
