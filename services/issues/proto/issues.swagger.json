{
  "swagger": "2.0",
  "info": {
    "title": "services/issues/proto/issues.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/issues": {
      "get": {
        "summary": "List Issues",
        "operationId": "IssueService_ListIssues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/issuesListIssuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "IssueService"
        ]
      },
      "post": {
        "summary": "Create Issue object request",
        "operationId": "IssueService_CreateIssue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/issuesIssue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/issuesCreateIssueRequest"
            }
          }
        ],
        "tags": [
          "IssueService"
        ]
      }
    },
    "/v1/issues/{uuid}": {
      "get": {
        "summary": "Get Issue",
        "operationId": "IssueService_GetIssue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/issuesIssue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IssueService"
        ]
      },
      "delete": {
        "summary": "Delete Issue object request",
        "operationId": "IssueService_DeleteIssue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IssueService"
        ]
      },
      "put": {
        "summary": "Update Issue object request",
        "operationId": "IssueService_UpdateIssue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/issuesIssue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/issuesUpdateIssueRequest"
            }
          }
        ],
        "tags": [
          "IssueService"
        ]
      }
    }
  },
  "definitions": {
    "issuesCreateIssueRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/issuesIssueStatus"
        },
        "sprint_id": {
          "type": "string",
          "format": "uint64"
        },
        "estimate": {
          "type": "string",
          "format": "uint64"
        },
        "assignee_uuid": {
          "type": "string"
        },
        "creator_uuid": {
          "type": "string"
        }
      }
    },
    "issuesIssue": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/issuesIssueStatus"
        },
        "sprint_id": {
          "type": "string",
          "format": "uint64"
        },
        "estimate": {
          "type": "string",
          "format": "uint64"
        },
        "assignee": {
          "$ref": "#/definitions/usersUser"
        },
        "creator": {
          "$ref": "#/definitions/usersUser"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "issuesIssueStatus": {
      "type": "string",
      "enum": [
        "IN_BACKLOG",
        "IN_PROGRESS",
        "TEST",
        "DONE",
        "ARCHIVED"
      ],
      "default": "IN_BACKLOG"
    },
    "issuesListIssuesResponse": {
      "type": "object",
      "properties": {
        "issues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/issuesIssue"
          }
        },
        "total_count": {
          "type": "string",
          "format": "int64"
        },
        "limit": {
          "type": "string",
          "format": "int64"
        },
        "offset": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "issuesUpdateIssueRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/issuesIssueStatus"
        },
        "sprint_id": {
          "type": "string",
          "format": "uint64"
        },
        "estimate": {
          "type": "string",
          "format": "uint64"
        },
        "assignee_uuid": {
          "type": "string"
        },
        "creator_uuid": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "usersUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "uuid": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "enable": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}
