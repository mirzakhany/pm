syntax = "proto3";

package tasks;

option go_package = "tasks";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "services/users/proto/users.proto";

// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;
// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = true;

enum TaskStatus {
    IN_BACKLOG = 0;
    IN_PROGRESS = 1;
    TEST = 2;
    DONE = 3;
    ARCHIVED = 4;
}

message ListTasksRequest {
    int64 limit = 1;
    int64 offset = 2;
}

message ListTasksResponse {
    repeated Task tasks = 1 [(gogoproto.jsontag) = "tasks"];
    int64 total_count = 2 [(gogoproto.jsontag) = "total_count"];
    int64 limit = 3 [(gogoproto.jsontag) = "limit"];
    int64 offset = 4 [(gogoproto.jsontag) = "offset"];
}

message GetTaskRequest {
    string uuid = 1;
}

message CreateTaskRequest {
    uint64 id = 1;
    string uuid = 2;
    string title = 3;
    string description = 4;
    TaskStatus status = 5;
    uint64 sprint_id = 6;
    uint64 estimate = 7;
    string assignee_uuid = 8;
    string creator_uuid = 9;
}

message UpdateTaskRequest {
    uint64 id = 1;
    string uuid = 2;
    string title = 3;
    string description = 4;
    TaskStatus status = 5;
    uint64 sprint_id = 6;
    uint64 estimate = 7;
    string assignee_uuid = 8;
    string creator_uuid = 9;
}

message DeleteTaskRequest {
    string uuid = 1;
}

message Task {
    uint64 id = 1;
    string uuid = 2;
    string title = 3;
    string description = 4;
    TaskStatus status = 5;
    uint64 sprint_id = 6;
    uint64 estimate = 7;
    users.User assignee = 8;
    users.User creator = 9;
    google.protobuf.Timestamp created_at = 10 [(gogoproto.stdtime) = true];
    google.protobuf.Timestamp updated_at = 11 [(gogoproto.stdtime) = true];
}

service TaskService {

    // List Tasks
    rpc ListTasks (ListTasksRequest) returns (ListTasksResponse) {
        option (google.api.http) = {
            get: "/v1/tasks"
        };
    }
    // Get Task
    rpc GetTask (GetTaskRequest) returns (Task) {
        option (google.api.http) = {
          get: "/v1/tasks/{uuid}"
        };
    }

    // Create Task object request
    rpc CreateTask (CreateTaskRequest) returns (Task) {
        option (google.api.http) = {
            post: "/v1/tasks"
            body: "*"
        };
    }

    // Update Task object request
    rpc UpdateTask (UpdateTaskRequest) returns (Task) {
        option (google.api.http) = {
            put: "/v1/tasks/{uuid}"
            body: "*"
        };
    }

    // Delete Task object request
    rpc DeleteTask (DeleteTaskRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
          delete: "/v1/tasks/{uuid}"
        };
    }
}